version: '3'
services:
  postgresql:
    image: postgres:latest
    restart: always
    container_name: postgresql
    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - 5432:5432
    volumes:
      - ./scripts/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - ./data:/var/lib/postgresql/data/
    networks:
      - app_default

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    container_name: rabbitmq
    env_file: .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
    - 5672:5672 # AMQP protocol port
    - 15672:15672 # HTTP management UI
    volumes:
      - ./docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ./docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - app_default

  api:
    build:
      context: .
      dockerfile: Dockerfile-api
    container_name: api
    ports:
    - 8080:8080
    env_file: .env
    restart: always
    networks:
      - app_default
    depends_on:
      - postgresql
      - rabbitmq

  converter:
    build:
      context: .
      dockerfile: Dockerfile-converter
    container_name: converter
    env_file: .env
    restart: always
    networks:
      - app_default
    depends_on:
      - api
      - postgresql
      - rabbitmq

volumes:
  database-data:
networks:
  app_default:
    driver: bridge
