version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.2.0 # Use the AWS ECR orb in your config
  aws-cli: circleci/aws-cli@2.0.3
#  aws-ecs: circleci/aws-ecs@x.y.z # Use the AWS ECS orb in your config

jobs:
  test:
    docker:
      - image: circleci/golang:1.16
        auth:
          username: $DOCKER_HUB_USER
          password: $DOCKER_HUB_PASSWORD

    parallelism: 2

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS

      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

      - run:
          name: Install dependencies
          command: go mod download

      - save_cache:
          key: v1-pkg-cache
          paths:
            - /home/circleci/go/pkg/mod

      - run:
          name: Run unit tests
          command: go test ./...

      - store_artifacts:
          path: $TEST_RESULTS
          destination: raw-test-output

      - store_test_results:
          path: $TEST_RESULTS

  build:
    docker:
      - image: circleci/golang:1.16
    environment:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: 0

    steps:
      - checkout
      - run:
          name: Install dependencies
          command: go mod download

      - run:
          name: Build api
          command: go build cmd/api/main.go

      - run:
          name: Build converter
          command: go build cmd/converter/main.go

      - save_cache:
          key: v1-pkg-cache
          paths:
            - /home/circleci/go/pkg/mod

workflows:
  version: 2
  build-workflow:
    jobs:
      - test
      - build:
          requires:
            - test
      - aws-ecr/build-and-push-image:
#          repo: converter-api-repo
          repo: converter.cicd
          tag: "v0.1.${CIRCLE_BUILD_NUM}"
          dockerfile: Dockerfile-api
          path: .
...
